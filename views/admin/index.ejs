<!--A Design by W3layouts
Author: W3layout
Author URL: http://w3layouts.com
License: Creative Commons Attribution 3.0 Unported
License URL: http://creativecommons.org/licenses/by/3.0/
-->
<!DOCTYPE html>
<head>
<title>WatchBox_Home</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="keywords" content="Visitors Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, 
Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>
<!-- bootstrap-css -->
<link rel="stylesheet" href="/admin/bootstrap.min.css" >
<!-- //bootstrap-css -->
<!-- Custom CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link href="/admin/style.css" rel='stylesheet' type='text/css' />
<link href="/admin/style-responsive.css" rel="stylesheet"/>
<!-- font CSS -->
<link href='//fonts.googleapis.com/css?family=Roboto:400,100,100italic,300,300italic,400italic,500,500italic,700,700italic,900,900italic' rel='stylesheet' type='text/css'>
<!-- font-awesome icons -->
<link rel="stylesheet" href="/admin/font.css" type="text/css"/>
<link href="/admin/font-awesome.css" rel="stylesheet"> 
<link rel="stylesheet" href="/admin/morris.css" type="text/css"/>
<!-- calendar -->
<link rel="stylesheet" href="/admin/monthly.css">
<!-- //calendar -->
<!-- //font-awesome icons -->
<script src="/js/admin/jquery2.0.3.min.js"></script>
<script src="/js/admin/raphael-min.js"></script>
<script src="/js/admin/morris.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
	<style>
  #repotlistdiv {
    display: none;
    position: absolute;
    top: 6rem;
    right: 14rem;
    background-color: #333;
    color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    width: 280px;
  }

  #dateFilterForm {
    margin-bottom: 20px;
  }

  label {
    display: block;
    margin-bottom: 5px;
    color: #fff;
  }

  input {
    padding: 5px;
    width: 100%;
    margin-bottom: 10px;
    box-sizing: border-box;
  }

  button {
    background-color: #4caf50;
    color: white;
    padding: 8px 15px;
    border: none;
    cursor: pointer;
    border-radius: 4px;
  }

  button:hover {
    background-color: #45a049;
  }

  #exportButton {
    text-align: center;
  }

  #exportExcel {
    display: none;
    background-color: #008CBA;
    color: white;
    padding: 8px 15px;
    text-decoration: none;
    border-radius: 4px;
  }

  #exportExcel:hover {
    background-color: #0056b3;
  }
</style>
</style>
</head>
<body>
<section id="container">
<!--header start-->
<header class="header fixed-top clearfix">
<!--logo start-->
<div class="brand">
    <a href="/admin" class="logo">
        ADMIN
    </a>
    <!-- <div class="sidebar-toggle-box">
        <div class="fa fa-bars"></div>
    </div> -->
</div>

</div>





<div class="top-nav clearfix">
    <!--search & user info start-->
    <ul class="nav pull-right top-menu">
        <li>
            <input type="text" class="form-control search" placeholder=" Search">
        </li>
        <!-- user login dropdown start-->
        <li class="dropdown">
            <a data-toggle="dropdown" class="dropdown-toggle" href="#">
                <img alt="" src="/images/2.png">
                <span class="username">John Doe</span>
                <b class="caret"></b>
            </a>
            <ul class="dropdown-menu extended logout">
                <!-- <li><a href="#"><i class=" fa fa-suitcase"></i>Profile</a></li>
                <li><a href="#"><i class="fa fa-cog"></i> Settings</a></li>
                <li><a href="login.html"><i class="fa fa-key"></i> Log Out</a></li> -->
            </ul>
			
        </li>
		<button class="btn btn-outline-danger my-2 my-sm-0">
			<a class="nav-link text-white" href="/admin/logout" >Log-out</a>
		</button>
		
        <!-- user login dropdown end -->
       
    </ul>
    <!--search & user info end-->
</div>

</header>
<!--header end-->
<!--sidebar start-->
<aside>
    <div id="sidebar" class="nav-collapse">
        <!-- sidebar menu start-->
        <div class="leftside-navigation">
            <ul class="sidebar-menu" id="nav-accordion">
                <li>
                    <a class="active" href="/admin">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="sub-menu">
                    <a href="/admin/users">
                        <i class="fas fa-users"></i>
                        <span>Users</span>
                    </a>
                    
                </li>
                <li>
                    <a href="/admin/category">
                        <i class="fas fa-shopping-cart"></i>
                        <span>Category </span>
                    </a>
                </li>
                <li class="sub-menu">
                    <a href="/admin/products">
                        <i class="fas fa-box"></i>
                        <span>Products</span>
                    </a>
                   
                </li>
				<li class="sub-menu">
                    <a href="/admin/orders">
                        <i class="fas fa-shopping-bag"></i>
                        <span>Orders</span>
                    </a>
                   
                </li>
				<li class="sub-menu">
                    <a href="/admin/Coupon">
                        <i class="fas fa-shopping-bag"></i>
                        <span>Coupon</span>
                    </a>
                   
                </li>
                
            </ul>            </div>
        <!-- sidebar menu end-->
    </div>
	
</aside>


<!--sidebar end-->
<!--main content start-->
<section id="main-content">
	<section class="wrapper">
		<!-- //market-->
		<div class="market-updates">
			<div class="col-md-3 market-update-gd">
				<div class="market-update-block clr-block-2">
					<div class="col-md-4 market-update-right">
						<i class="fas fa-eye"> </i>
					</div>
					 <div class="col-md-8 market-update-left">
					 <h4>Visitors</h4>
					<h3>13,500</h3>
					<p></p>
				  </div>
				  <div class="clearfix"> </div>
				</div>
			</div>
			<div class="col-md-3 market-update-gd">
				<a href="/admin/users"> 
				<div class="market-update-block clr-block-1">
					<div class="col-md-4 market-update-right">
						<i class="fas fa-users" ></i>
					</div>
					<div class="col-md-8 market-update-left">
					<h4>Users</h4>
						<h3><%=userCount%></h3>
						<p>Total Users</p>
					</div>
				  <div class="clearfix"> </div>
				</div>
				</a>
			</div>
			<div class="col-md-3 market-update-gd">
				<div class="market-update-block clr-block-3">
					<div class="col-md-4 market-update-right">
						<i class="fas fa-usd"></i>
					</div>
					<div class="col-md-8 market-update-left">
						<h4>Sales</h4>
						<h3>â‚¹<%=totalAmount%></h3>
						
						<p>Total Sales</p>
					</div>
				  <div class="clearfix"> </div>
				</div>
			</div>
			<div class="col-md-3 market-update-gd">
				<div class="market-update-block clr-block-4">
					<div class="col-md-4 market-update-right">
						<i class="fas fa-shopping-cart" aria-hidden="true"></i>
					</div>
					<div class="col-md-8 market-update-left">
						<h4>Orders</h4>
						<h3><%=totalOrders%></h3>
						<p>Total Orders</p>
					</div>
				  <div class="clearfix"> </div>
				</div>
			</div>
		   <div class="clearfix"> </div>
		</div>	

		
		<button id="reportbtn">Sales Report</button>

		<div id="repotlistdiv" style="display: none;">
			<div class="d-flex">
			  <form id="dateFilterForm">
				<label for="startDate">Start Date:</label>
				<input type="date" id="startDate" name="startDate" style="width: 150px;">
				<br>
				<label for="endDate">End Date:</label>
				<input type="date" id="endDate" name="endDate" style="width: 150px;">
				<br>
				<button type="submit" style="padding: 8px 15px;">Apply</button>
			  </form>
			  <br>
			  <div id="exportButton" class="w-100" style="display: none;">
				<a id="exportExcel" download="exported_data.xlsx" style="width: 150px;">Export Now</a>
			  </div>
			</div>
		  </div>
		  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
		  <script>
			const repotlistdiv = document.getElementById("repotlistdiv");
			const reportbtn = document.getElementById("reportbtn");
		
			reportbtn.addEventListener("click", (event) => {
				if (repotlistdiv.style.display === "none") {
					repotlistdiv.style.display = "block";
				} else {
					repotlistdiv.style.display = "none";
				}
			});
		
			const dateFilterForm = document.getElementById("dateFilterForm");
			const exportButton = document.getElementById("exportButton");
			const exportExcelButton = document.getElementById("exportExcel");
		
			dateFilterForm.addEventListener("submit", async function (event) {
				event.preventDefault();
		
				// Get selected start and end dates
				const startDate = document.getElementById("startDate").value;
				const endDate = document.getElementById("endDate").value;
		
				// Check if start date is empty
				if (!startDate) {
					Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a start date.',
            });
            return;
				}
		
				// Check if end date is not greater than the present date
				const currentDate = new Date();
				const selectedEndDate = new Date(endDate);
		
				if (selectedEndDate > currentDate) {
					Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'End date cannot be greater than the present date.',
            });
            return;
				}
		
				// Check if both dates are selected
				if (startDate && endDate) {
					// Construct the URL for the Excel export route with the selected dates
					const url = `/exportOrdersToExcel?startDate=${startDate}&endDate=${endDate}`;
		
					// Log the URL for debugging
					console.log("URL:", url);
		
					// Fetch the Excel data from the server
					try {
						const response = await fetch(url);
		
						// Log the response for debugging
						console.log("Response:", response);
		
						if (response.ok) {
							// Create a blob with the Excel data
							const blob = await response.blob();
		
							const blobUrl = URL.createObjectURL(blob);
							exportExcelButton.href = blobUrl;
		
							
							exportButton.style.display = "block";
							exportExcelButton.style.display = "block";
							console.log(exportButton);
						} else {
							console.error("Error fetching Excel data");
						}
					} catch (error) {
						console.error("Error:", error);
					}
				} else {
					Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select both start and end dates.',
            });
				}
			});
		</script>
		
		
	

		<!-- //market-->
		
		<div class="agil-info-calendar">
	
	
		
			<div class="clearfix"> </div>
		</div>
			<!-- tasks -->
			<div class="agile-last-grids">
				<div class="col-md-4 agile-last-left">
					<div class="agile-last-grid">
						<div class="area-grids-heading">
							<h3>Weekly</h3>
						</div>
						<div id="graph7"></div>
						<script>
						// This crosses a DST boundary in the UK.
						Morris.Area({
						  element: 'graph7',
						  data: [
							{x: '2013-03-30 22:00:00', y: 3, z: 3},
							{x: '2013-03-31 00:00:00', y: 2, z: 0},
							{x: '2013-03-31 02:00:00', y: 0, z: 2},
							{x: '2013-03-31 04:00:00', y: 4, z: 4}
						  ],
						  xkey: 'x',
						  ykeys: ['y', 'z'],
						  labels: ['Y', 'Z']
						});
						</script>

					</div>
				</div>
				<div class="col-md-4 agile-last-left agile-last-middle">
					<div class="agile-last-grid">
						<div class="area-grids-heading">
							<h3>Monthly</h3>
						</div>
						<div id="graph8"></div>
						<script>
						/* data stolen from http://howmanyleft.co.uk/vehicle/jaguar_'e'_type */
						var day_data = [
						  {"period": "2016-10-01", "licensed": 3407, "sorned": 660},
						  {"period": "2016-09-30", "licensed": 3351, "sorned": 629},
						  {"period": "2016-09-29", "licensed": 3269, "sorned": 618},
						  {"period": "2016-09-20", "licensed": 3246, "sorned": 661},
						  {"period": "2016-09-19", "licensed": 3257, "sorned": 667},
						  {"period": "2016-09-18", "licensed": 3248, "sorned": 627},
						  {"period": "2016-09-17", "licensed": 3171, "sorned": 660},
						  {"period": "2016-09-16", "licensed": 3171, "sorned": 676},
						  {"period": "2016-09-15", "licensed": 3201, "sorned": 656},
						  {"period": "2016-09-10", "licensed": 3215, "sorned": 622}
						];
						Morris.Bar({
						  element: 'graph8',
						  data: day_data,
						  xkey: 'period',
						  ykeys: ['licensed', 'sorned'],
						  labels: ['Licensed', 'SORN'],
						  xLabelAngle: 60
						});
						</script>
					</div>
				</div>
				<div class="col-md-4 agile-last-left agile-last-right">
					<div class="agile-last-grid">
						<div class="area-grids-heading">
							<h3>Yearly</h3>
						</div>
						<div id="graph9"></div>
						<script>
						var day_data = [
						  {"elapsed": "I", "value": 34},
						  {"elapsed": "II", "value": 24},
						  {"elapsed": "III", "value": 3},
						  {"elapsed": "IV", "value": 12},
						  {"elapsed": "V", "value": 13},
						  {"elapsed": "VI", "value": 22},
						  {"elapsed": "VII", "value": 5},
						  {"elapsed": "VIII", "value": 26},
						  {"elapsed": "IX", "value": 12},
						  {"elapsed": "X", "value": 19}
						];
						Morris.Line({
						  element: 'graph9',
						  data: day_data,
						  xkey: 'elapsed',
						  ykeys: ['value'],
						  labels: ['value'],
						  parseTime: false
						});
						</script>

					</div>
				</div>
				<div class="clearfix"> </div>
			</div>
		<!-- //tasks -->
		<div class="chart-selection">
			<label for="chartType">Select Chart Type:</label>
			<select id="chartType" onchange="toggleCharts()">
				<option value="bar" selected>Bar Chart</option>
				<option value="line">Line Chart</option>
				<option value="radar">Radar Chart</option>
			</select>
		</div>
		
		<div class="agileits-w3layouts-stats">
					<div class="col-md-4 stats-info widget" id="barChartDiv">
						<canvas
						id="myChart"
						style="width: 100%; max-width: 420px"
						height="300%"
					  ></canvas>
					</div>
					<div class="col-md-4 stats-info widget" id="lineChartDiv">
						<canvas id="barchart" style="width: 100%; max-width: 420px" height="300%"></canvas>
					</div>
					<div class="col-md-4 stats-info widget" id="radarChartDiv">
						<canvas id="yearlyChart" style="width: 20%; max-width: 420px" height="100%" ></canvas>
					</div>
					
					<div class="clearfix"> </div>
				</div>
</section>

</section>
<!--main content end-->
</section>
<script src="/js/admin/bootstrap.js"></script>
<script src="/js/admin/jquery.dcjqaccordion.2.7.js"></script>
<script src="/js/admin/scripts.js"></script>
<script src="/js/admin/jquery.slimscroll.js"></script>
<script src="/js/admin/jquery.nicescroll.js"></script>

<script src="/js/admin/jquery.scrollTo.js"></script>
<!-- morris JavaScript -->	

<script>
    function toggleCharts() {
        var chartType = document.getElementById("chartType").value;
        
        // Hide all chart divs
        document.getElementById("barChartDiv").style.display = "none";
        document.getElementById("lineChartDiv").style.display = "none";
        document.getElementById("radarChartDiv").style.display = "none";

        // Show the selected chart div
        if (chartType === "bar") {
            document.getElementById("barChartDiv").style.display = "block";
        } else if (chartType === "line") {
            document.getElementById("lineChartDiv").style.display = "block";
        } else if (chartType === "radar") {
            document.getElementById("radarChartDiv").style.display = "block";
        }
    }
</script>

<script>
    const xValues = <%- JSON.stringify(dayCounts.map(day => day.date)) %>;
    const yValues = <%- JSON.stringify(dayCounts.map(day => day.totalOrders)) %>;

    const barColors = ["red", "green", "blue", "orange", "brown", "yellow", "blue"];

    new Chart("myChart", {
        type: "bar",
        data: {
            labels: xValues,
            datasets: [
                {
                    backgroundColor: barColors,
                    data: yValues,
                },
            ],
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "Daily Order Counts",
            },
        },
    });
</script>
<script>
    const chart = document.getElementById("barchart");

    // Assuming monthlyCounts is an array of objects with 'month' and 'totalOrders' properties
    const xxValues = <%- JSON.stringify(monthlyCounts.map(month => month.month)) %>;
    const yyValues = <%- JSON.stringify(monthlyCounts.map(month => month.totalOrders)) %>;

    const data = {
        labels: xxValues,
        datasets: [
            {
                label: "Monthly Order Counts",
                data: yyValues,
                backgroundColor: [
                    "rgba(255, 99, 132, 0.2)",
                    "rgba(255, 159, 64, 0.2)",
                    "rgba(255, 205, 86, 0.2)",
                    "rgba(75, 192, 192, 0.2)",
                    "rgba(54, 162, 235, 0.2)",
                    "rgba(153, 102, 255, 0.2)",
                    "rgba(201, 203, 207, 0.2)",
                ],
                borderColor: [
                    "rgb(201,52,244)",
                    "rgb(255, 159, 64)",
                    "rgb(255, 205, 86)",
                    "rgb(75, 192, 192)",
                    "rgb(54, 162, 235)",
                    "rgb(153, 102, 255)",
                    "rgb(201, 203, 207)",
                ],
                borderWidth: 1,
            },
        ],
    };

    const config = {
        type: "bar",
        data: data,
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                },
            },
        },
    };

    new Chart(chart, config);
</script>

	<!-- //calendar -->
	<script>
		const charty = document.getElementById("yearlyChart");
	
		// Assuming yearlyData is the array of objects with 'year' and 'totalOrders' properties
		const yearlyData = <%- JSON.stringify(yearlyCount) %>;
	
		const xxxValues = yearlyData.map(year => year.year);
		const yyyValues = yearlyData.map(year => year.totalOrders);
	
		const datay = {
			labels: xxxValues,
			datasets: [{
				backgroundColor: [
					"#b91d47",
					"#00aba9",
					"#2b5797",
					// Add more colors as needed
				],
				data: yyyValues
			}]
		};
	
		const configy = {
			type: "pie",
			data: datay,
			options: {
				title: {
					display: true,
					text: "Total Orders for Each Year"
				}
			}
		};
	
		new Chart(charty, configy);
	</script>
	


</body>
</html>
